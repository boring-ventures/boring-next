version: '3.8'

services:
  # PostgreSQL Database (Development)
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cemse_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - db_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cemse_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - cemse-dev-network

  # Redis for caching (Development)
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cemse-dev-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cemse-dev-network

  # MinIO Client for bucket initialization
  mc:
    image: minio/mc:latest
    container_name: minio-client
    depends_on:
      - minio
    environment:
      MC_HOST_local: http://minioadmin:minioadmin@minio:9000
    command: sh -c "sleep 10 && mc alias set local http://minio:9000 minioadmin minioadmin && mc mb local/videos local/images local/documents local/courses local/lessons local/resources && mc policy set public local/videos && mc policy set public local/images && mc policy set public local/documents && mc policy set public local/courses && mc policy set public local/lessons && mc policy set public local/resources && echo 'MinIO buckets created successfully' && tail -f /dev/null"
    networks:
      - cemse-dev-network

  # Prisma Studio (Development)
  prisma-studio:
    image: node:20-alpine
    working_dir: /app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/cemse_dev
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    command: sh -c "npm install -g prisma && prisma studio --hostname 0.0.0.0 --port 5555"
    networks:
      - cemse-dev-network
    depends_on:
      - db

volumes:
  db_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  minio_data:
    driver: local

networks:
  cemse-dev-network:
    driver: bridge 